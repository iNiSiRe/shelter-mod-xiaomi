#!/usr/bin/env php
<?php

use inisire\NetBus\Event\Server\EventBus;
use inisire\NetBus\Logging\EchoLogger;
use inisire\NetBus\Query\Server\QueryBus;
use React\EventLoop\Loop;
use React\Socket\Connector;
use Shelter\Module\Xiaomi\Application\Configuration;
use Shelter\Module\Xiaomi\Application\XiaomiGatewayModule;
use Shelter\Module\Xiaomi\Core\Service\MiioClient;
use Shelter\Module\Xiaomi\Core\Service\PropertiesConverter;
use Shelter\Module\Xiaomi\Core\Gateway\XiaomiGatewayClient;
use Symfony\Component\EventDispatcher\EventDispatcher;

require_once dirname(__DIR__).'/vendor/autoload.php';

if (count($argv) < 2) {
    echo 'Error: Not enough params' . PHP_EOL;
    echo 'Usage: bin/gateway config.yml' . PHP_EOL;
    exit(-1);
}

$configPath = $argv[1];

if (!file_exists($configPath)) {
    echo 'Error: Config file not exists' . PHP_EOL;
    exit(-1);
}

$config = new Configuration($configPath);

$loop = Loop::get();
$logger = new EchoLogger();
$dispatcher = new EventDispatcher();

$eventBus = new EventBus($loop, $logger);
$eventBus->start($config->getEventBusBind());

$queryBus = new QueryBus($loop, $logger);
$queryBus->start($config->getQueryBusBind());

$gateway = new XiaomiGatewayClient($logger, new Connector($loop), $loop, new MiioClient($loop, $logger), new PropertiesConverter(), $dispatcher);
$gateway->connect($config->getGateway());

$module = new XiaomiGatewayModule($gateway, $eventBus, $config);
$dispatcher->addSubscriber($module);
$queryBus->registerHandler($config->getNodeId(), $module);

Loop::run();